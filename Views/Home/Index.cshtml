@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Jules Dupuis</h1>
    <h2>Objectifs:</h2>
    <p>Avoir une application ASP.Net Core de base nommée "VCubWatcher" qui tourne sur sa machine</p>
    <p>
        Créer un repository public sur github, bitbucket ou gitlab pour héberger votre code.
        gitignore de base pour .NET Core :  https://gist.github.com/vmandic/ac2ecc9c24f6899ee0ec46e4ce444a0e
    </p>
    <p>Publier votre code sur le repository à chaque avancée (attention, si l'historique ne présente pas les commits au fur et à mesure de votre avancée, cela pourra être pénalisé)</p>
    <p>Supprimer du menu les pages de bases pour 2 liens de menu fonctionnels vers les pages vides suivantes : "Accueil", "Liste des stations", "Carte", "Mes favoris"</p>
    <p>Compléter la pages "Accueil" pour présenter votre travail, votre nom/prenom, cette liste d'objectifs (que vous rayerez au fur et à mesure qu'ils sont complétés) et l'URL où votre code source est visible</p>
    <p>
        Se brancher sur l'API Vcub de Bordeaux Métropole pour récupérer les données en temps réel
        API avec des données simples à exploiter 🙂 https://api.alexandredubois.com/vcub-backend/vcub.php
        Passer des données à la vue :  https://docs.microsoft.com/fr-fr/aspnet/core/mvc/views/overview?view=aspnetcore-3.1
        Générer des classes C# à partir d'un flux JSON :  http://json2csharp.com/
        Lire des données issues d'un flux JSON :  https://docs.microsoft.com/fr-fr/dotnet/csharp/tutorials/console-webapiclient
    </p>
    <p>
        Afficher les données de l'API sous forme de tableau sur la page "Liste des stations" (les stations sont triées par ordre alphabétique). Pour chaque station on affichera : la commune, le nom de la station, le nombre de vélo électriques, le nombre de vélos au total, ainsi que le nombre d'emplacements libres.
        Razor Cheat sheet : https://gist.github.com/jonlabelle/8738373
    </p>
    <p>
        Afficher les données de l'API sous forme de carte sur la page "Carte" (chaque station sera représentée par une épingle à son emplacement)
        Intégrer une carte openstreet map sur un site : https://nouvelle-techno.fr/actualites/2018/05/11/pas-a-pas-inserer-une-carte-openstreetmap-sur-votre-site
    </p>
    <p>Ajouter sur chaque épingle de la carte la possibilité de cliquer pour afficher une infobulle qui indiquera le nombre de vélos disponibles et de places libres à la station en question</p>
    <p>Ajouter sur la page "Liste des stations" et/ou "Carte" la possibilité de rajouter des stations en favoris</p>
    <p>Compléter la page "Mes favoris" pour n'afficher sous forme de tableau que les stations marquées en favoris</p>
    <p>
        Stocker les stations favorites dans les cookies de votre navigateur ou le localstorage
        Travailler avec les cookies https://www.c-sharpcorner.com/article/asp-net-core-working-with-cookie/
    </p>
    <p>
        Centrer automatiquement la carte par rapport à la position de l'utilisateur
        Récupérer la position de l'utilisateur : https://developer.mozilla.org/fr/docs/Web/API/Geolocation_APIAvoir une application ASP.Net Core de base nommée "VCubWatcher" qui tourne sur sa machine
    </p>
    <p>Trier automatiquement la liste des stations par rapport à la position de l'utilisateur</p>
    <p>
        Rendre votre application bilingue Français / Anglais
        https://docs.microsoft.com/fr-fr/aspnet/core/fundamentals/localization?view=aspnetcore-3.1
    </p>
    <p>
        Déployer votre code sur un serveur accessible publiquement en consultation
        Déployer une application ASP.Net Core sur un serveur Debian : https://medium.com/setu677/how-to-host-asp-net-core-on-linux-using-nginx-85339560e929
        Déployer une application ASP.Net Core sur Azure : https://docs.microsoft.com/fr-fr/aspnet/core/tutorials/publish-to-azure-webapp-using-vs?view=aspnetcore-5.0
        Déployer une application ASP.Net sur Heroku : https://dev.to/alrobilliard/deploying-net-core-to-heroku-1lfe
    </p>
    <p>Faire en sorte que votre site soit agréable à utiliser sur mobile (il ne doit pas comporter ascenseur horizontal)</p>
    <p>BONUS : toute fonctionnalité supplémentaire sera valorisée, pensez-juste à l'indiquer sur votre page d'accueil que je puisse la comptabiliser</p>


</div>
